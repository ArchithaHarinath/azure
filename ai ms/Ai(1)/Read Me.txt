	Name : ARJUN VEKARIYA
	UTA ID : 1001242856
	Programming Language : JAVA
	
	Code Structure :
	Classs : Maxconnect4, AiPlayer, GameBoard
	 

        Maxconnect4 :
	

        1)MakeHumanPlay() -this function does the work of taking input from user and makes the next move for human player.
        2)MakeComputerPlay4OneMove() - this function is used when the computer have to make a move for a one-move mode game.
        3)printBoardAndScore() - this function shows the current score and the board's current state.
        4)MakeComputerPlay4Interactive() - this function is used when the computer have to make a move for an interactive mode game.
        5)printResult() - this function displays the final score and declares winner or tie.

        GameBoard :
        

        1)getscore() - this function takes the current score and send it to printBoardAndScore() to print score.
        2)getCurrentTurn() - this function traces the current turn.
        3)getGameBoard() - this function takes the current gameboard state and pass it to printGameBoard() function.
        4)printGameBoard() - this function displays the current board state.
        

        AiPlayer :

        findBestPlay() - this function makes a make a move based on min and max value from the below given two functions
        Calculate_Min_Utility() - this function gives the min value.
        Calculate_Max_Utility() - this function gives the max value.


        


	How to run Code :
	Compile using :
	        javac -classpath . Maxconnect4.java
	
        Execute using :
                (for interactive mode) :
	        java Maxconnect4 interactive [input_file] [computer-next/human-next] [depth]  
                for example: java Maxconnect4 interactive input.txt computer-next 8

                (for one-move mode) :
                time java Maxconnect4 one-move [input_file] [output_file] [depth]  
                for example: java Maxconnect4 one-move input1.txt output.txt 8

        Command to retrieve execution time:
                time java Maxconnect4 one-move [input_file] [output_file] [depth]  
                for example: java Maxconnect4 one-move input1.txt output.txt 8


        Execution time chart :
        Depth: 1
        User time : 0m0.129s


        Depth: 2
        User time : 0m0.133s

        Depth: 3
        User time : 0m0.134s

        Depth: 4
        User time : 0m0.152s

        Depth: 5
        User time : 0m0.162s

        Depth: 6
        User time : 0m0.218s

        Depth: 7
        User time : 0m0.389s

        Depth: 8
        User time : 0m0.558s

        Depth: 9
        User time : 0m0.884s

        Depth: 10
        User time : 0m1.929s







	
